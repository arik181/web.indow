<?php  if (!defined('BASEPATH')) exit('No direct script access allowed');

function getAddressesArray(){

    return array(
        array('address' => '1111 FAKE ST','address_ext' => 'SUITE 2111','city' => 'PORTLAND','zipcode' => '97123'),
        array('address' => '3302 Howe Ferry','address_ext' => 'Apt. 363','city' => 'Reneton','zipcode' => '02409-7240'),
        array('address' => '373 O\'Conner Locks','address_ext' => 'Apt. 062','city' => 'North Trevorshire','zipcode' => '37519'),
        array('address' => '510 Mike Highway Suite 236','address_ext' => 'Apt. 316','city' => 'McDermottbury','zipcode' => '65071-3552'),
        array('address' => '960 Lesch Springs','address_ext' => 'Suite 318','city' => 'Robertsfort','zipcode' => '65535-3874'),
        array('address' => '8684 Adolfo Vista Apt. 641','address_ext' => 'Apt. 490','city' => 'West Austin','zipcode' => '56374-2362'),
        array('address' => '5117 Ward Plaza Apt. 743','address_ext' => 'Suite 994','city' => 'East Edwina','zipcode' => '39088'),
        array('address' => '9696 Luettgen Greens','address_ext' => 'Suite 437','city' => 'North Enrico','zipcode' => '11717-8152'),
        array('address' => '8837 Hershel Rest','address_ext' => 'Apt. 173','city' => 'Beulahborough','zipcode' => '25508'),
        array('address' => '8922 Connelly Crossroad Apt. 618','address_ext' => 'Suite 228','city' => 'Erichshire','zipcode' => '01998'),
        array('address' => '2674 Carter Harbor','address_ext' => 'Apt. 266','city' => 'Beerbury','zipcode' => '72143-9366'),
        array('address' => '55490 Zulauf Road Suite 331','address_ext' => 'Suite 756','city' => 'Lake Griffin','zipcode' => '99330-4200'),
        array('address' => '298 Meghan Point','address_ext' => 'Suite 410','city' => 'Elouisebury','zipcode' => '76086-0329'),
        array('address' => '810 Dejuan Plaza','address_ext' => 'Suite 687','city' => 'Maevestad','zipcode' => '65994'),
        array('address' => '15682 Alec Mission Apt. 930','address_ext' => 'Apt. 587','city' => 'South Trevor','zipcode' => '17365-8992'),
        array('address' => '689 Odell Key Suite 580','address_ext' => 'Apt. 812','city' => 'New Jakobview','zipcode' => '15443-1460'),
        array('address' => '793 Blanda Drive','address_ext' => 'Suite 894','city' => 'Torpside','zipcode' => '03072-9401'),
        array('address' => '56515 Orlo Park','address_ext' => 'Apt. 208','city' => 'Port Robertoberg','zipcode' => '18597'),
        array('address' => '79798 Bode Mission Suite 563','address_ext' => 'Apt. 481','city' => 'Lake Bretview','zipcode' => '87553-4678'),
        array('address' => '501 Ulises Pike','address_ext' => 'Suite 450','city' => 'Audreanneland','zipcode' => '33713'),
        array('address' => '645 Kristoffer Points','address_ext' => 'Suite 929','city' => 'North Mortimer','zipcode' => '32861-4688'),
        array('address' => '2954 Schmitt Haven','address_ext' => 'Suite 284','city' => 'Lake Darbyburgh','zipcode' => '59639-1032'),
        array('address' => '187 Lesch Walks','address_ext' => 'Suite 868','city' => 'North Jairofort','zipcode' => '56834'),
        array('address' => '870 Joelle Highway Suite 863','address_ext' => 'Apt. 939','city' => 'North Elishamouth','zipcode' => '86492'),
        array('address' => '213 Rahul River Apt. 789','address_ext' => 'Apt. 944','city' => 'Frederiquemouth','zipcode' => '56151-3748'),
        array('address' => '27559 Dorian Mills','address_ext' => 'Apt. 361','city' => 'Ruthborough','zipcode' => '12007'),
        array('address' => '7645 Shanie Groves','address_ext' => 'Apt. 399','city' => 'Ezraport','zipcode' => '94902-5050'),
        array('address' => '8933 Marks Stream','address_ext' => 'Suite 255','city' => 'Lonniefort','zipcode' => '54424-1638'),
        array('address' => '4030 Clare Oval','address_ext' => 'Apt. 817','city' => 'Mayerville','zipcode' => '17757'),
        array('address' => '980 Daphney Ramp Suite 971','address_ext' => 'Suite 661','city' => 'Lake Vivianne','zipcode' => '01848-3679'),
        array('address' => '10196 Mertie Crossroad Apt. 290','address_ext' => 'Suite 353','city' => 'Auerberg','zipcode' => '53198'),
        array('address' => '43198 Aidan Plaza Suite 280','address_ext' => 'Suite 386','city' => 'Claudshire','zipcode' => '79056'),
        array('address' => '25623 Danial Lake Suite 374','address_ext' => 'Suite 045','city' => 'Lynnview','zipcode' => '92978'),
        array('address' => '06787 Sawayn Squares','address_ext' => 'Apt. 046','city' => 'New Everardo','zipcode' => '89555'),
        array('address' => '269 Marlen Rapid','address_ext' => 'Suite 627','city' => 'South Kraig','zipcode' => '93289-1174'),
        array('address' => '012 Leta Pine Suite 147','address_ext' => 'Suite 246','city' => 'Ullrichland','zipcode' => '08611-5385'),
        array('address' => '733 Antoinette Turnpike','address_ext' => 'Apt. 436','city' => 'North Georgianna','zipcode' => '23515-3730'),
        array('address' => '52271 Ozella Mews Suite 703','address_ext' => 'Suite 125','city' => 'Gottliebchester','zipcode' => '19781'),
        array('address' => '1836 Gage Burgs','address_ext' => 'Apt. 767','city' => 'Farrelltown','zipcode' => '79603-2790'),
        array('address' => '0653 Graham Hills','address_ext' => 'Suite 312','city' => 'Yostberg','zipcode' => '73847-1696'),
        array('address' => '93803 Garland Ranch Apt. 543','address_ext' => 'Suite 741','city' => 'South Lexie','zipcode' => '43673-1847'),
        array('address' => '54884 Hilll Street','address_ext' => 'Suite 810','city' => 'O\'Reillyville','zipcode' => '20680-6592'),
        array('address' => '23801 Bria Plaza Suite 068','address_ext' => 'Suite 660','city' => 'North Brannonfort','zipcode' => '91918'),
        array('address' => '359 Donnelly River','address_ext' => 'Apt. 951','city' => 'Beverlyfurt','zipcode' => '23698-5460'),
        array('address' => '1773 Bartell Drive Apt. 515','address_ext' => 'Suite 069','city' => 'Port Eldred','zipcode' => '36818-9091'),
        array('address' => '1515 Laurie Glen Apt. 448','address_ext' => 'Suite 764','city' => 'South Colleenstad','zipcode' => '56672'),
        array('address' => '67803 Cormier Trail Apt. 715','address_ext' => 'Apt. 390','city' => 'Port Nasir','zipcode' => '57123-1846'),
        array('address' => '074 Luis Cliff','address_ext' => 'Apt. 141','city' => 'New Noemi','zipcode' => '45040-5644'),
        array('address' => '95054 Ilene Turnpike','address_ext' => 'Suite 741','city' => 'Bruenton','zipcode' => '69428'),
        array('address' => '093 McGlynn Well','address_ext' => 'Apt. 298','city' => 'Guiseppeton','zipcode' => '77214-0746'),
        array('address' => '2434 Prosacco Roads','address_ext' => 'Apt. 698','city' => 'West Richard','zipcode' => '80554'),
        array('address' => '952 Eveline Roads','address_ext' => 'Apt. 997','city' => 'Blickmouth','zipcode' => '99338-5622'),
        array('address' => '539 Schneider Walks','address_ext' => 'Suite 383','city' => 'North Meda','zipcode' => '02704'),
        array('address' => '83780 Cara Streets','address_ext' => 'Suite 221','city' => 'South Era','zipcode' => '91498'),
        array('address' => '7200 Lemke Tunnel Apt. 800','address_ext' => 'Apt. 997','city' => 'East Brennan','zipcode' => '54951'),
        array('address' => '49845 Lennie Hill Apt. 557','address_ext' => 'Apt. 552','city' => 'West Anabelshire','zipcode' => '34329-0989'),
        array('address' => '72979 Armstrong Station Suite 660','address_ext' => 'Suite 950','city' => 'Kennyview','zipcode' => '87313-5479'),
        array('address' => '66731 Elinore Pike Suite 250','address_ext' => 'Apt. 649','city' => 'Lake Edenview','zipcode' => '21876-2900'),
        array('address' => '50849 Eugenia Shore Apt. 216','address_ext' => 'Suite 438','city' => 'Larryton','zipcode' => '40386-2121'),
        array('address' => '0611 Marlee Courts Apt. 399','address_ext' => 'Apt. 060','city' => 'Ashlynnberg','zipcode' => '68523-2584'),
        array('address' => '35207 Klocko Path Suite 477','address_ext' => 'Suite 783','city' => 'Fletaton','zipcode' => '39901'),
        array('address' => '737 Syble Port','address_ext' => 'Suite 895','city' => 'East Ettie','zipcode' => '60710-4502'),
        array('address' => '6126 Glover Fort','address_ext' => 'Suite 338','city' => 'Dustyside','zipcode' => '76887-0653'),
        array('address' => '305 Fay Harbor Apt. 021','address_ext' => 'Suite 025','city' => 'Maxwellport','zipcode' => '69467-5738'),
        array('address' => '589 Alverta Square Apt. 016','address_ext' => 'Apt. 710','city' => 'South Tyreekchester','zipcode' => '46832-4444'),
        array('address' => '06459 Cartwright Brooks Apt. 753','address_ext' => 'Apt. 280','city' => 'South Bobbyside','zipcode' => '62211-0313'),
        array('address' => '7021 Howell Inlet Suite 040','address_ext' => 'Apt. 072','city' => 'Harveyton','zipcode' => '36008'),
        array('address' => '4460 Deckow Club','address_ext' => 'Apt. 856','city' => 'Cordiaside','zipcode' => '73760-3853'),
        array('address' => '259 Connor Rue Suite 180','address_ext' => 'Apt. 460','city' => 'Linneaton','zipcode' => '36247'),
        array('address' => '16839 Funk Forge Suite 058','address_ext' => 'Apt. 001','city' => 'Terrymouth','zipcode' => '49493-6215'),
        array('address' => '7945 Ernest Estate Suite 609','address_ext' => 'Apt. 710','city' => 'Parisianfurt','zipcode' => '61151'),
        array('address' => '32002 Streich Groves Suite 079','address_ext' => 'Suite 217','city' => 'East Kole','zipcode' => '74175-0495'),
        array('address' => '084 Carlos Harbor Apt. 846','address_ext' => 'Apt. 206','city' => 'North Maudie','zipcode' => '20698-2361'),
        array('address' => '4548 Russell Stravenue Suite 817','address_ext' => 'Suite 088','city' => 'Daughertymouth','zipcode' => '22600'),
        array('address' => '596 Antonio Island','address_ext' => 'Suite 579','city' => 'Merlland','zipcode' => '89464-6867'),
        array('address' => '557 Jeanette Walks Suite 626','address_ext' => 'Suite 818','city' => 'North Torey','zipcode' => '31046'),
        array('address' => '0535 Courtney Greens Apt. 824','address_ext' => 'Suite 166','city' => 'West Dane','zipcode' => '63128'),
        array('address' => '98812 Considine Rue','address_ext' => 'Suite 581','city' => 'Timothyview','zipcode' => '96200'),
        array('address' => '8551 Haskell Way Apt. 026','address_ext' => 'Apt. 160','city' => 'West Sam','zipcode' => '80810-5730'),
        array('address' => '254 Abernathy Burg','address_ext' => 'Apt. 427','city' => 'West Tanyafurt','zipcode' => '30609-5247'),
        array('address' => '2930 Dereck Stream Apt. 568','address_ext' => 'Apt. 615','city' => 'Jordanfurt','zipcode' => '91142'),
        array('address' => '8890 Rau Stravenue Suite 326','address_ext' => 'Apt. 270','city' => 'South Edwardfort','zipcode' => '12655-5047'),
        array('address' => '685 Sienna Terrace','address_ext' => 'Apt. 097','city' => 'Joeyview','zipcode' => '82216'),
        array('address' => '9902 Denesik Harbors Suite 283','address_ext' => 'Suite 226','city' => 'Port Jasenport','zipcode' => '98574'),
        array('address' => '0391 Ondricka Meadow Apt. 106','address_ext' => 'Apt. 935','city' => 'Lake Vivianeshire','zipcode' => '74387-8607'),
        array('address' => '918 Urban Mountain Suite 371','address_ext' => 'Apt. 228','city' => 'Matildaland','zipcode' => '79624'),
        array('address' => '2536 Frami Shoals Apt. 812','address_ext' => 'Suite 184','city' => 'Cummingsfurt','zipcode' => '24548-3900'),
        array('address' => '6816 Batz Islands','address_ext' => 'Apt. 005','city' => 'Lake Dereck','zipcode' => '10896'),
        array('address' => '46734 Halvorson Plains Apt. 992','address_ext' => 'Suite 866','city' => 'South Alexandrastad','zipcode' => '97206-9678'),
        array('address' => '810 Bahringer Mountains','address_ext' => 'Apt. 786','city' => 'North Adela','zipcode' => '16770-4622'),
        array('address' => '84614 Carolyne Divide Apt. 856','address_ext' => 'Apt. 296','city' => 'Heaneyton','zipcode' => '92688')
    );

}

function getRandomRandomAddress(){

    $addresses = getAddressesArray();

    $random_address =   array_rand($addresses,1);

    return  $addresses[$random_address];

}

function getStatesArray(){

    return array(
        'AL',
        'AK',
        'AZ',
        'AR',
        'CA',
        'CO',
        'CT',
        'DE',
        'FL',
        'GA',
        'HI',
        'ID',
        'IL',
        'IN',
        'IA',
        'KS',
        'KY',
        'LA',
        'ME',
        'MD',
        'MA',
        'MI',
        'MN',
        'MS',
        'MO',
        'MT',
        'NE',
        'NV',
        'NH',
        'NJ',
        'NM',
        'NY',
        'NC',
        'ND',
        'OH',
        'OK',
        'OR',
        'PA',
        'RI',
        'SC',
        'SD',
        'TN',
        'TX',
        'UT',
        'VT',
        'VA',
        'WA',
        'WV',
        'WI',
        'WY'
    );
}

function getRandomState(){

    $states = getStatesArray();

    $random_state =   array_rand($states,1);

    return  $states[$random_state];

}

function getUsersArray(){

    return array(
        array('first_name' => 'admin','last_name' => 'user'),
        array('first_name' => 'Lucio','last_name' => 'Treutel'),
        array('first_name' => 'Joesph','last_name' => 'Grady'),
        array('first_name' => 'Mary','last_name' => 'Krajcik'),
        array('first_name' => 'Cale','last_name' => 'Barrows'),
        array('first_name' => 'Monroe','last_name' => 'Effertz'),
        array('first_name' => 'Felix','last_name' => 'Metz'),
        array('first_name' => 'Sophia','last_name' => 'Yost'),
        array('first_name' => 'Lawrence','last_name' => 'Halvorson'),
        array('first_name' => 'Sigrid','last_name' => 'Ondricka'),
        array('first_name' => 'Uriel','last_name' => 'Bosco'),
        array('first_name' => 'Samir','last_name' => 'Abshire'),
        array('first_name' => 'Mellie','last_name' => 'Hilll'),
        array('first_name' => 'Emmy','last_name' => 'Mohr'),
        array('first_name' => 'Waldo','last_name' => 'Hilll'),
        array('first_name' => 'Hailie','last_name' => 'Carroll'),
        array('first_name' => 'Kiley','last_name' => 'Nikolaus'),
        array('first_name' => 'Juliana','last_name' => 'Howe'),
        array('first_name' => 'Regan','last_name' => 'Murazik'),
        array('first_name' => 'Jessy','last_name' => 'Hahn'),
        array('first_name' => 'Jeramy','last_name' => 'Steuber'),
        array('first_name' => 'Kayleigh','last_name' => 'Smith'),
        array('first_name' => 'Hertha','last_name' => 'Hansen'),
        array('first_name' => 'Fleta','last_name' => 'Harvey'),
        array('first_name' => 'Nora','last_name' => 'Ledner'),
        array('first_name' => 'Flo','last_name' => 'Prohaska'),
        array('first_name' => 'Rubie','last_name' => 'Dickinson'),
        array('first_name' => 'Al','last_name' => 'Kunde'),
        array('first_name' => 'Vella','last_name' => 'Frami'),
        array('first_name' => 'Orpha','last_name' => 'Wilkinson'),
        array('first_name' => 'Deondre','last_name' => 'Legros'),
        array('first_name' => 'Mozelle','last_name' => 'Stark'),
        array('first_name' => 'Corrine','last_name' => 'Klein'),
        array('first_name' => 'Bernhard','last_name' => 'Rice'),
        array('first_name' => 'Jedidiah','last_name' => 'Reichel'),
        array('first_name' => 'Deven','last_name' => 'Lockman'),
        array('first_name' => 'Kelsie','last_name' => 'Dare'),
        array('first_name' => 'Christy','last_name' => 'Swift'),
        array('first_name' => 'Teagan','last_name' => 'O\'Conner'),
        array('first_name' => 'Jessie','last_name' => 'Braun'),
        array('first_name' => 'Austin','last_name' => 'Batz'),
        array('first_name' => 'Conner','last_name' => 'Schulist'),
        array('first_name' => 'Rosalind','last_name' => 'Bernhard'),
        array('first_name' => 'Zita','last_name' => 'Goldner'),
        array('first_name' => 'Berneice','last_name' => 'Wehner'),
        array('first_name' => 'Charity','last_name' => 'Botsford'),
        array('first_name' => 'Ervin','last_name' => 'Parisian'),
        array('first_name' => 'Burnice','last_name' => 'Adams'),
        array('first_name' => 'Fiona','last_name' => 'Robel'),
        array('first_name' => 'Tina','last_name' => 'Von'),
        array('first_name' => 'Ashlynn','last_name' => 'Becker'),
        array('first_name' => 'Brain','last_name' => 'Schuppe'),
        array('first_name' => 'Alphonso','last_name' => 'Murazik'),
        array('first_name' => 'Ottilie','last_name' => 'Berge'),
        array('first_name' => 'Jana','last_name' => 'Effertz'),
        array('first_name' => 'Berry','last_name' => 'Quigley'),
        array('first_name' => 'Ervin','last_name' => 'Lockman'),
        array('first_name' => 'Emmie','last_name' => 'Stamm'),
        array('first_name' => 'Ronny','last_name' => 'Moore'),
        array('first_name' => 'Ethyl','last_name' => 'Streich'),
        array('first_name' => 'Randal','last_name' => 'Feest'),
        array('first_name' => 'Amya','last_name' => 'Trantow'),
        array('first_name' => 'Chanelle','last_name' => 'Huel'),
        array('first_name' => 'Bettye','last_name' => 'Becker'),
        array('first_name' => 'Hassie','last_name' => 'Bruen'),
        array('first_name' => 'Elenor','last_name' => 'Spencer'),
        array('first_name' => 'Gerda','last_name' => 'Kub'),
        array('first_name' => 'Helga','last_name' => 'Schmeler'),
        array('first_name' => 'Kitty','last_name' => 'Predovic'),
        array('first_name' => 'Holly','last_name' => 'Kovacek'),
        array('first_name' => 'Dedric','last_name' => 'Stehr'),
        array('first_name' => 'Rod','last_name' => 'Walter'),
        array('first_name' => 'Candida','last_name' => 'Shanahan'),
        array('first_name' => 'Alda','last_name' => 'Will'),
        array('first_name' => 'Maxime','last_name' => 'Howe'),
        array('first_name' => 'Cydney','last_name' => 'Kohler'),
        array('first_name' => 'Ola','last_name' => 'Macejkovic'),
        array('first_name' => 'Gudrun','last_name' => 'Considine'),
        array('first_name' => 'Jaylan','last_name' => 'Rolfson'),
        array('first_name' => 'Lucas','last_name' => 'Waelchi'),
        array('first_name' => 'Brielle','last_name' => 'Jaskolski'),
        array('first_name' => 'Destiny','last_name' => 'Deckow'),
        array('first_name' => 'Dariana','last_name' => 'Steuber'),
        array('first_name' => 'Broderick','last_name' => 'Dicki'),
        array('first_name' => 'Caterina','last_name' => 'Schinner'),
        array('first_name' => 'Annie','last_name' => 'Wolf'),
        array('first_name' => 'Willard','last_name' => 'Kreiger'),
        array('first_name' => 'Tyrese','last_name' => 'Spencer'),
        array('first_name' => 'Eden','last_name' => 'Bode'),
        array('first_name' => 'Wyatt','last_name' => 'Heathcote')
    );


}

function getRandomUser(){

    $users = getUsersArray();

    $random_user =   array_rand($users,1);

    return  $users[$random_user];

}

function getGroupsArray(){

    return array(
            array('id' => '1','name' => 'IndowAdmin'),
            array('id' => '2','name' => 'IndowRep'),
            array('id' => '3','name' => 'PacificNorthwest'),
            array('id' => '4','name' => 'SouthWestUS'),
            array('id' => '5','name' => 'SouthernUS'),
            array('id' => '6','name' => 'NorthEast'),
            array('id' => '7','name' => 'MidWest'),
            array('id' => '8','name' => 'DealerRep'),
            array('id' => '9','name' => 'Freebird'),
            array('id' => '10','name' => 'Cartwright Group'),
            array('id' => '11','name' => 'Douglas, Swaniawski and Deckow'),
            array('id' => '12','name' => 'Huel, Hettinger and Collins'),
            array('id' => '13','name' => 'Stroman-Mosciski'),
            array('id' => '14','name' => 'Spinka Inc'),
            array('id' => '15','name' => 'Tremblay, Barton and McKenzie'),
            array('id' => '16','name' => 'Connelly, White and Schaden'),
            array('id' => '17','name' => 'Hodkiewicz, Haley and Brakus'),
            array('id' => '18','name' => 'Ruecker, Weimann and Miller'),
            array('id' => '19','name' => 'Heaney, Reichel and Harris'),
            array('id' => '20','name' => 'Murphy Inc'),
            array('id' => '21','name' => 'Ullrich Ltd'),
            array('id' => '22','name' => 'Hand, Wintheiser and Crooks'),
            array('id' => '23','name' => 'Bauch, Sporer and King'),
            array('id' => '24','name' => 'Trantow-Thiel'),
            array('id' => '25','name' => 'Marvin Group'),
            array('id' => '26','name' => 'Kessler LLC'),
            array('id' => '27','name' => 'Graham, Nader and Cassin'),
            array('id' => '28','name' => 'Kertzmann, Sawayn and O\'Connell'),
            array('id' => '29','name' => 'Pfeffer LLC'),
            array('id' => '30','name' => 'Abbott-Hodkiewicz'),
            array('id' => '31','name' => 'Gerhold-Kirlin'),
            array('id' => '32','name' => 'Schmitt, Predovic and Russel'),
            array('id' => '33','name' => 'Hermiston and Sons'),
            array('id' => '34','name' => 'Fadel-Gutmann'),
            array('id' => '35','name' => 'Crooks-Boehm'),
            array('id' => '36','name' => 'Hammes, Ward and Mante'),
            array('id' => '37','name' => 'Christiansen, Schowalter and Stanton'),
            array('id' => '38','name' => 'Dickens-Weimann'),
            array('id' => '39','name' => 'Nader, Lynch and Koelpin'),
            array('id' => '40','name' => 'Moore, Ledner and Stokes'),
            array('id' => '41','name' => 'Prohaska, Cassin and Stokes'),
            array('id' => '42','name' => 'Bergnaum-Cummings'),
            array('id' => '43','name' => 'Hammes Inc'),
            array('id' => '44','name' => 'O\'Kon, Torphy and Leannon'),
            array('id' => '45','name' => 'Steuber-Durgan'),
            array('id' => '46','name' => 'Roberts, Ankunding and Rath'),
            array('id' => '47','name' => 'Hilll, Gislason and Hayes'),
            array('id' => '48','name' => 'Spinka-Thiel'),
            array('id' => '49','name' => 'Kautzer, Walsh and Kulas'),
            array('id' => '50','name' => 'Lowe, Buckridge and Senger'),
            array('id' => '51','name' => 'Greenfelder, Bergnaum and Terry'),
            array('id' => '52','name' => 'Lesch, Ratke and Herzog'),
            array('id' => '53','name' => 'Funk, Johnson and Renner'),
            array('id' => '54','name' => 'Blick Ltd'),
            array('id' => '55','name' => 'Torp Group'),
            array('id' => '56','name' => 'Lubowitz-Larkin'),
            array('id' => '57','name' => 'Lehner, Kris and Tillman'),
            array('id' => '58','name' => 'Bogan Inc'),
            array('id' => '59','name' => 'Cormier-Smitham'),
            array('id' => '60','name' => 'Wisozk LLC'),
            array('id' => '61','name' => 'Dickinson-Haag'),
            array('id' => '62','name' => 'Stehr Ltd'),
            array('id' => '63','name' => 'Shanahan LLC'),
            array('id' => '64','name' => 'Dooley-McDermott'),
            array('id' => '65','name' => 'Eichmann-Mills'),
            array('id' => '66','name' => 'Mitchell, Daniel and Murray'),
            array('id' => '67','name' => 'Fahey, Kassulke and Lang'),
            array('id' => '68','name' => 'Schultz, Quigley and Blick'),
            array('id' => '69','name' => 'Koss, Kreiger and Vandervort'),
            array('id' => '70','name' => 'Fahey-Ratke'),
            array('id' => '71','name' => 'Denesik, Gerhold and Boehm'),
            array('id' => '72','name' => 'Farrell Ltd'),
            array('id' => '73','name' => 'Abernathy, Schamberger and Doyle'),
            array('id' => '74','name' => 'Blanda LLC'),
            array('id' => '75','name' => 'Ratke, Ledner and Gerhold'),
            array('id' => '76','name' => 'Towne-Quigley'),
            array('id' => '77','name' => 'Fay-Becker'),
            array('id' => '78','name' => 'Terry, Hackett and Kreiger'),
            array('id' => '79','name' => 'Kessler, Olson and Corkery'),
            array('id' => '80','name' => 'Russel LLC'),
            array('id' => '81','name' => 'Ruecker and Sons'),
            array('id' => '82','name' => 'Willms-Gorczany'),
            array('id' => '83','name' => 'Rippin-Gutkowski'),
            array('id' => '84','name' => 'Brakus-Gerlach'),
            array('id' => '85','name' => 'Rodriguez Group'),
            array('id' => '86','name' => 'Harris, Lowe and Beatty'),
            array('id' => '87','name' => 'Beer, Torphy and Schoen'),
            array('id' => '88','name' => 'Windler-Wintheiser'),
            array('id' => '89','name' => 'Kihn-Eichmann'),
            array('id' => '90','name' => 'O\'Reilly, Orn and VonRueden'),
            array('id' => '91','name' => 'Kuhic, Runte and Boyle'),
            array('id' => '92','name' => 'Ankunding and Sons'),
            array('id' => '93','name' => 'Schiller Group'),
            array('id' => '94','name' => 'Beer, Mohr and Bogan'),
            array('id' => '95','name' => 'Daniel LLC'),
            array('id' => '96','name' => 'Nicolas, Thiel and King'),
            array('id' => '97','name' => 'Will-Hayes'),
            array('id' => '98','name' => 'Kozey-Dach'),
            array('id' => '99','name' => 'Murphy Inc')
        );
}

    function getRandomGroup(){

        $groups = getGroupsArray();

        $random_group =   array_rand($groups,1);

        return  $groups[$random_group ];

    }